// Utility to find out which CPU features rustc enables for the current platform.

fn main() {
    eprintln!("16bit-mode {:?}", cfg!(target_feature = "16bit-mode"));
    eprintln!("32bit-mode {:?}", cfg!(target_feature = "32bit-mode"));
    eprintln!("3dnow {:?}", cfg!(target_feature = "3dnow"));
    eprintln!("3dnowa {:?}", cfg!(target_feature = "3dnowa"));
    eprintln!("64bit {:?}", cfg!(target_feature = "64bit"));
    eprintln!("64bit-mode {:?}", cfg!(target_feature = "64bit-mode"));
    eprintln!("adx {:?}", cfg!(target_feature = "adx"));
    eprintln!("aes {:?}", cfg!(target_feature = "aes"));
    eprintln!("atom {:?}", cfg!(target_feature = "atom"));
    eprintln!("avx {:?}", cfg!(target_feature = "avx"));
    eprintln!("avx2 {:?}", cfg!(target_feature = "avx2"));
    eprintln!("avx512bitalg {:?}", cfg!(target_feature = "avx512bitalg"));
    eprintln!("avx512bw {:?}", cfg!(target_feature = "avx512bw"));
    eprintln!("avx512cd {:?}", cfg!(target_feature = "avx512cd"));
    eprintln!("avx512dq {:?}", cfg!(target_feature = "avx512dq"));
    eprintln!("avx512er {:?}", cfg!(target_feature = "avx512er"));
    eprintln!("avx512f {:?}", cfg!(target_feature = "avx512f"));
    eprintln!("avx512ifma {:?}", cfg!(target_feature = "avx512ifma"));
    eprintln!("avx512pf {:?}", cfg!(target_feature = "avx512pf"));
    eprintln!("avx512vbmi {:?}", cfg!(target_feature = "avx512vbmi"));
    eprintln!("avx512vbmi2 {:?}", cfg!(target_feature = "avx512vbmi2"));
    eprintln!("avx512vl {:?}", cfg!(target_feature = "avx512vl"));
    eprintln!("avx512vnni {:?}", cfg!(target_feature = "avx512vnni"));
    eprintln!("avx512vpopcntdq {:?}", cfg!(target_feature = "avx512vpopcntdq"));
    eprintln!("bmi {:?}", cfg!(target_feature = "bmi"));
    eprintln!("bmi2 {:?}", cfg!(target_feature = "bmi2"));
    eprintln!("cldemote {:?}", cfg!(target_feature = "cldemote"));
    eprintln!("clflushopt {:?}", cfg!(target_feature = "clflushopt"));
    eprintln!("clwb {:?}", cfg!(target_feature = "clwb"));
    eprintln!("clzero {:?}", cfg!(target_feature = "clzero"));
    eprintln!("cmov {:?}", cfg!(target_feature = "cmov"));
    eprintln!("cx16 {:?}", cfg!(target_feature = "cx16"));
    eprintln!("ermsb {:?}", cfg!(target_feature = "ermsb"));
    eprintln!("f16c {:?}", cfg!(target_feature = "f16c"));
    eprintln!("false-deps-lzcnt-tzcnt {:?}", cfg!(target_feature = "false-deps-lzcnt-tzcnt"));
    eprintln!("false-deps-popcnt {:?}", cfg!(target_feature = "false-deps-popcnt"));
    eprintln!("fast-11bytenop {:?}", cfg!(target_feature = "fast-11bytenop"));
    eprintln!("fast-15bytenop {:?}", cfg!(target_feature = "fast-15bytenop"));
    eprintln!("fast-bextr {:?}", cfg!(target_feature = "fast-bextr"));
    eprintln!("fast-gather {:?}", cfg!(target_feature = "fast-gather"));
    eprintln!("fast-hops {:?}", cfg!(target_feature = "fast-hops"));
    eprintln!("fast-lzcnt {:?}", cfg!(target_feature = "fast-lzcnt"));
    eprintln!("fast-partial-ymm-or-zmm-write {:?}", cfg!(target_feature = "fast-partial-ymm-or-zmm-write"));
    eprintln!("fast-scalar-fsqrt {:?}", cfg!(target_feature = "fast-scalar-fsqrt"));
    eprintln!("fast-shld-rotate {:?}", cfg!(target_feature = "fast-shld-rotate"));
    eprintln!("fast-variable-shuffle {:?}", cfg!(target_feature = "fast-variable-shuffle"));
    eprintln!("fast-vector-fsqrt {:?}", cfg!(target_feature = "fast-vector-fsqrt"));
    eprintln!("fma {:?}", cfg!(target_feature = "fma"));
    eprintln!("fma4 {:?}", cfg!(target_feature = "fma4"));
    eprintln!("fsgsbase {:?}", cfg!(target_feature = "fsgsbase"));
    eprintln!("fxsr {:?}", cfg!(target_feature = "fxsr"));
    eprintln!("gfni {:?}", cfg!(target_feature = "gfni"));
    eprintln!("glm {:?}", cfg!(target_feature = "glm"));
    eprintln!("glp {:?}", cfg!(target_feature = "glp"));
    eprintln!("idivl-to-divb {:?}", cfg!(target_feature = "idivl-to-divb"));
    eprintln!("idivq-to-divl {:?}", cfg!(target_feature = "idivq-to-divl"));
    eprintln!("invpcid {:?}", cfg!(target_feature = "invpcid"));
    eprintln!("lea-sp {:?}", cfg!(target_feature = "lea-sp"));
    eprintln!("lea-uses-ag {:?}", cfg!(target_feature = "lea-uses-ag"));
    eprintln!("lwp {:?}", cfg!(target_feature = "lwp"));
    eprintln!("lzcnt {:?}", cfg!(target_feature = "lzcnt"));
    eprintln!("macrofusion {:?}", cfg!(target_feature = "macrofusion"));
    eprintln!("merge-to-threeway-branch {:?}", cfg!(target_feature = "merge-to-threeway-branch"));
    eprintln!("mmx {:?}", cfg!(target_feature = "mmx"));
    eprintln!("movbe {:?}", cfg!(target_feature = "movbe"));
    eprintln!("movdir64b {:?}", cfg!(target_feature = "movdir64b"));
    eprintln!("movdiri {:?}", cfg!(target_feature = "movdiri"));
    eprintln!("mpx {:?}", cfg!(target_feature = "mpx"));
    eprintln!("mwaitx {:?}", cfg!(target_feature = "mwaitx"));
    eprintln!("nopl {:?}", cfg!(target_feature = "nopl"));
    eprintln!("pad-short-functions {:?}", cfg!(target_feature = "pad-short-functions"));
    eprintln!("pclmul {:?}", cfg!(target_feature = "pclmul"));
    eprintln!("pconfig {:?}", cfg!(target_feature = "pconfig"));
    eprintln!("pku {:?}", cfg!(target_feature = "pku"));
    eprintln!("popcnt {:?}", cfg!(target_feature = "popcnt"));
    eprintln!("prefer-256-bit {:?}", cfg!(target_feature = "prefer-256-bit"));
    eprintln!("prefetchwt1 {:?}", cfg!(target_feature = "prefetchwt1"));
    eprintln!("prfchw {:?}", cfg!(target_feature = "prfchw"));
    eprintln!("ptwrite {:?}", cfg!(target_feature = "ptwrite"));
    eprintln!("rdpid {:?}", cfg!(target_feature = "rdpid"));
    eprintln!("rdrnd {:?}", cfg!(target_feature = "rdrnd"));
    eprintln!("rdseed {:?}", cfg!(target_feature = "rdseed"));
    eprintln!("retpoline {:?}", cfg!(target_feature = "retpoline"));
    eprintln!("retpoline-external-thunk {:?}", cfg!(target_feature = "retpoline-external-thunk"));
    eprintln!("retpoline-indirect-branches {:?}", cfg!(target_feature = "retpoline-indirect-branches"));
    eprintln!("retpoline-indirect-calls {:?}", cfg!(target_feature = "retpoline-indirect-calls"));
    eprintln!("rtm {:?}", cfg!(target_feature = "rtm"));
    eprintln!("sahf {:?}", cfg!(target_feature = "sahf"));
    eprintln!("sgx {:?}", cfg!(target_feature = "sgx"));
    eprintln!("sha {:?}", cfg!(target_feature = "sha"));
    eprintln!("shstk {:?}", cfg!(target_feature = "shstk"));
    eprintln!("slm {:?}", cfg!(target_feature = "slm"));
    eprintln!("slow-3ops-lea {:?}", cfg!(target_feature = "slow-3ops-lea"));
    eprintln!("slow-incdec {:?}", cfg!(target_feature = "slow-incdec"));
    eprintln!("slow-lea {:?}", cfg!(target_feature = "slow-lea"));
    eprintln!("slow-pmaddwd {:?}", cfg!(target_feature = "slow-pmaddwd"));
    eprintln!("slow-pmulld {:?}", cfg!(target_feature = "slow-pmulld"));
    eprintln!("slow-shld {:?}", cfg!(target_feature = "slow-shld"));
    eprintln!("slow-two-mem-ops {:?}", cfg!(target_feature = "slow-two-mem-ops"));
    eprintln!("slow-unaligned-mem-16 {:?}", cfg!(target_feature = "slow-unaligned-mem-16"));
    eprintln!("slow-unaligned-mem-32 {:?}", cfg!(target_feature = "slow-unaligned-mem-32"));
    eprintln!("soft-float {:?}", cfg!(target_feature = "soft-float"));
    eprintln!("sse {:?}", cfg!(target_feature = "sse"));
    eprintln!("sse-unaligned-mem {:?}", cfg!(target_feature = "sse-unaligned-mem"));
    eprintln!("sse2 {:?}", cfg!(target_feature = "sse2"));
    eprintln!("sse3 {:?}", cfg!(target_feature = "sse3"));
    eprintln!("sse4.1 {:?}", cfg!(target_feature = "sse4.1"));
    eprintln!("sse4.2 {:?}", cfg!(target_feature = "sse4.2"));
    eprintln!("sse4a {:?}", cfg!(target_feature = "sse4a"));
    eprintln!("ssse3 {:?}", cfg!(target_feature = "ssse3"));
    eprintln!("tbm {:?}", cfg!(target_feature = "tbm"));
    eprintln!("tremont {:?}", cfg!(target_feature = "tremont"));
    eprintln!("vaes {:?}", cfg!(target_feature = "vaes"));
    eprintln!("vpclmulqdq {:?}", cfg!(target_feature = "vpclmulqdq"));
    eprintln!("waitpkg {:?}", cfg!(target_feature = "waitpkg"));
    eprintln!("wbnoinvd {:?}", cfg!(target_feature = "wbnoinvd"));
    eprintln!("x87 {:?}", cfg!(target_feature = "x87"));
    eprintln!("xop {:?}", cfg!(target_feature = "xop"));
    eprintln!("xsave {:?}", cfg!(target_feature = "xsave"));
    eprintln!("xsavec {:?}", cfg!(target_feature = "xsavec"));
    eprintln!("xsaveopt {:?}", cfg!(target_feature = "xsaveopt"));
    eprintln!("xsaves {:?}", cfg!(target_feature = "xsaves"));
}
